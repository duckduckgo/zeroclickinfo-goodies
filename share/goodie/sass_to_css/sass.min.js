/*! sass.js - v0.9.12 (e1a0112) - built 2016-08-14
  providing libsass 3.3.6 (3ae9a20)
  via emscripten 1.36.5 (092d471)
 */
!function(e,t){"use strict"
"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():e.Sass=t()}(this,function(){function e(e){if(!e&&!t)throw new Error("Sass needs to be initialized with the URL of sass.worker.js - either via Sass.setWorkerUrl(url) or by new Sass(url)")
t||(t=e)
for(var r in this)"function"==typeof this[r]&&(this[r]=this[r].bind(this))
this._callbacks={},this._worker=new Worker(e||t),this._worker.addEventListener("message",this._handleWorkerMessage,!1)}var t,r=function(){"use strict"
if("undefined"!=typeof __dirname)return __dirname
if("undefined"==typeof document||!document.getElementsByTagName)return null
var e=document.currentScript||function(){var e=document.getElementsByTagName("script")
return e[e.length-1]}(),t=e&&e.src
return t?"/sass.js"===t.slice(-8)?t.slice(0,-8):"/sass.sync.js"===t.slice(-13)?t.slice(0,-13):null:null}()||".",s=function(){},i=[].slice
e.setWorkerUrl=function(e){t=e},e.style={nested:0,expanded:1,compact:2,compressed:3},e.comments={none:0,default:1},e.prototype={style:e.style,comments:e.comments,destroy:function(){this._worker&&this._worker.terminate(),this._worker=null,this._callbacks={},this._importer=null},_handleWorkerMessage:function(e){e.data.command&&this[e.data.command](e.data.args),this._callbacks[e.data.id]&&this._callbacks[e.data.id](e.data.result),delete this._callbacks[e.data.id]},_dispatch:function(e,t){if(!this._worker)throw new Error("Sass worker has been terminated")
e.id="cb"+Date.now()+Math.random(),this._callbacks[e.id]=t,this._worker.postMessage(e)},_importerInit:function(e){var t=function(e){this._worker.postMessage({command:"_importerFinish",args:[e]})}.bind(this)
try{this._importer(e[0],t)}catch(e){throw t({error:e.message}),e}},importer:function(e,t){if("function"!=typeof e&&null!==e)throw new Error("importer callback must either be a function or null")
this._importer=e,this._worker.postMessage({command:"importer",args:[Boolean(e)]}),t&&t()}}
var n="writeFile readFile listFiles removeFile clearFiles lazyFiles preloadFiles options compile compileFile"
return n.split(" ").forEach(function(t){e.prototype[t]=function(){var e=i.call(arguments,-1)[0],r=i.call(arguments,0,-1)
"function"!=typeof e&&(r.push(e),e=s),this._dispatch({command:t,args:r},e)}}),e.setWorkerUrl(r+"/sass.worker.js"),e})
