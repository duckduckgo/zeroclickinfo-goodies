{
    "id": "php_cheat_sheet",
    "name": "PHP",
    "description": "List of common php functions and internal constructs",
    
    "metadata": {
        "sourceName": "PHP Manual",
        "sourceUrl" : "http://php.net/manual/en/index.php"
    },
    
    "template_type": "code",
    "section_order": [
        "PHP Language Constructs",
        "PHP Array Functions",
        "PHP String Functions"
    ],
    "sections": {
        "PHP Language Constructs": [{
            "val": "Output one or more strings",
            "key": "echo"
        }, {
            "val": "Output a string",
            "key": "print"
        }, {
            "val": "Unset a given variable",
            "key": "unset"
        }, {
            "val": "Determine if a variable is set and is not NULL",
            "key": "isset"
        }, {
            "val": "Determine whether a variable is empty",
            "key": "empty"
        }, {
            "val": "Include and evaluate the specified file",
            "key": "include"
        }, {
            "val": "Include and evaluate the specified file, raise CompileError upon failure",
            "key": "require"
        }, {
            "val": "Output a message and terminate the current script",
            "key": "die"
        }],
        "PHP Array Functions": [{
            "val": "count all elements in array",
            "key": "count()"
        }, {
            "val": "values present in first argument but not in other arguments",
            "key": "array_diff()"
        }, {
            "val": "values present in first argument and in other arguments",
            "key": "array_intersect()"
        }, {
            "val": "merge one or more arrays in the first argument",
            "key": "array_merge()"
        }, {
            "val": "pop the element off the end of array",
            "key": "array_pop()"
        }, {
            "val": "push one or more elements onto the end of array",
            "key": "array_push()"
        }, {
            "val": "reverse array elements",
            "key": "array_reverse()"
        }, {
            "val": "flipped array on success else null",
            "key": "array_flip()"
        }, {
            "val": "searches for needle in array and returns key",
            "key": "array_search()"
        }, {
            "val": "The in_array() function searches an array for a specific value",
            "key": "in_array()"
        }, {
            "val": "The array_walk() function runs each array element in a user-defined function. The array's keys and values are parameters in the function",
            "key": "array_walk"
        }, {
            "val": "sort arrays in ascending order",
            "key": "sort()"
        }, {
            "val": "sort arrays in descending order",
            "key": "rsort()"
        }, {
            "val": "sort associative arrays in ascending order, according to the value",
            "key": "asort()"
        }, {
            "val": "sort associative arrays in ascending order, according to the key",
            "key": "ksort()"
        }, {
            "val": "sort associative arrays in descending order, according to the value",
            "key": "arsort()"
        }, {
            "val": "sort associative arrays in descending order, according to the key",
            "key": "krsort()"
        }],
        "PHP String Functions":[{
            "val": "return part of a string",
            "key": "substr()"
        }, {
            "val": "position of first occurrence of case insensitive substring",
            "key": "strpos()"
        }, {
            "val": "make string lowercase",
            "key": "strtolower()"
        }, {
            "val": "make string uppercase",
            "key": "strtoupper()"
        }, {
            "val": "reverse a string",
            "key": "strrev()"
        }, {
            "val": "returns string length",
            "key": "strlen()"
        }, {
            "val": "convert a string to array",
            "key": "str_split()"
        }, {
            "val": "binary safe string comparison",
            "key": "strcmp()"
        }, {
            "val": "translate characters or replace substrings",
            "key": "strtr()"
        }, {
            "val": "replaces some characters with some other characters in a string",
            "key": "str_replace()"
        }]
    }
}
