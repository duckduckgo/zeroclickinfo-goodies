{
    "id": "java_cheat_sheet",
    "name": "Java",
    "metadata": {
        "sourceName": "Cheatography",
        "sourceUrl": "http://www.cheatography.com/sschaub/cheat-sheets/java-fundamentals/"
    },
    "template_type": "terminal",
    "ignore_brackets": 1,
    "section_order": [
        "Program Compilation and Execution",
        "Data Types",
        "Statements",
        "Data Conver­sions",
        "Text Formatting",
        "String Methods",
        "Ar­rayList Methods",
        "Ha­shMap Methods"
    ],
    "sections": {
        "Program Compilation and Execution": [
            {
                "key": "javac Hello.j­ava",
                "val": "Compile Java File"
            },
            {
                "key": "java Hello",
                "val": "Execute Java Program"
            }
        ],
        "Data Types": [
            {
                "key": "byte/short/int/long",
                "val": "Integer Datatype."
            },
            {
                "key": "float/double",
                "val": "Floating Point Datatype."
            },
            {
                "key": "char",
                "val": "A Single Character."
            },
            {
                "key": "boolean",
                "val": "Represents True,False."
            },
            {
                "key": "String",
                "val": "Java object To Represent A Sequence Of Characters."
            }
        ],
        "Statements": [
            {
                "val": "If Statement",
                "key": "if(expre­ssion) {­\n\tst­ate­ments\n} else {\n\tst­ate­ments\n}"
            },
            {
                "val": "While Loop",
                "key": "while(expre­ssion) {\n­ st­ate­ments\n}"
            },
            {
                "val": "Do While Loop ",
                "key": "do {\n­ st­ate­ments\n} while(expre­ssion)"
            },
            {
                "val": "For Loop ",
                "key": "for (Init; Condition; Update) {\n\tst­ate­ments\n}"
            },
            {
                "val": "For Each Loop ",
                "key": "for (var : colle­ction) {\n\tst­ate­ments\n}"
            },
            {
                "val": "Exce­ption Handling",
                "key": "try {­\n\tsta­tem­ents\n} catch(Exce­pti­onType e1){\n\tsta­tem­ents\n} catch(Exception e2) {\n­ cat­ch-all statem­ents\n} finally {\n sta­tem­ents }"
            }
        ],
        "Data Conver­sions": [
            {
                "val": "String to Number",
                "key": "int i = Intege­r.p­ars­eIn­t(­str);\n\ndouble d = Double.pa­rse­Dou­ble­(s­tr);"
            },
            {
                "val": "Any Type to String",
                "key": "String s = String.va­lue­Of(­va­lue);"
            },
            {
                "val": "Numeric Conver­sions",
                "key": "int i = (int) numeric expres­sion;"
            }
        ],
        "Text Formatting": [
            {
                "val": "printf style format­ting",
                "key": "System.ou­t.p­rin­tf(­\"­Count is %d\n\", count);\n\ns = String.fo­rma­t(\"Count is %d\", count);"
            },
            {
                "val": "Mess­age­Format style format­ting",
                "key": "Messag­eFo­rma­t.f­ormat(\"{0} rows.\", 5);"
            },
            {
                "val": "Indi­vidual Numbers and Dates",
                "key": "Number­For­mat.ge­tCu­rre­ncy­Ins­tance().fo­rma­t(x);\n\nSimple­Dat­eFo­rma­t(\"h:mm a\").fo­rma­t(new Date());\n\nDecima­lFo­rma­t(\"#­,##­0.0­0\").fo­rma­t(1­25.32);"
            }
        ],
        "String Methods": [
            {
                "key": "s.le­ngth()",
                "val": "Length Of S."
            },
            {
                "key": "s.ch­arA­t(i)",
                "val": "Extract ith Character."
            },
            {
                "key": "s.su­bst­rin­g(­start, end)",
                "val": "Substring From Start To End."
            },
            {
                "key": "s.to­Upp­erC­ase()/lowerCase()",
                "val": "Returns Copy Of s In Caps/Lower Case."
            },
            {
                "key": "s.in­dex­Of(x)",
                "val": "Index Of First Occurence Of x."
            },
            {
                "key": "s.re­pla­ce(­old, new)",
                "val": "Search And Replace."
            },
            {
                "key": "s.sp­lit­(r­egex)",
                "val": "Splits Into Tokens."
            },
            {
                "key": "s.trim()",
                "val": "Trims Surrounding White Space."
            },
            {
                "key": "s.eq­ual­s(s2)",
                "val": "True If s Equals s2."
            },
            {
                "key": "s.co­mpa­reT­o(s2)",
                "val": "0 if Equal or +ve If s > s2 or-ve If s < s2."
            }
        ],
        "Ar­rayList Methods": [
            {
                "key": "l.ad­d(­item)",
                "val": "Add Item To List."
            },
            {
                "key": "l.ge­t(i)",
                "val": "Return ith Item."
            },
            {
                "key": "l.size()",
                "val": "Returns The Number Of Items."
            },
            {
                "key": "l.re­mov­e(i)",
                "val": "Remove ith Item."
            },
            {
                "key": "l.se­t(i, value)",
                "val": "Put value At Position i."
            }
        ],
        "Ha­shMap Methods": [
            {
                "key": "m.pu­t(­key­,­value)",
                "val": "Inserts Value With Key."
            },
            {
                "key": "m.ge­t(­key)",
                "val": "Retrieves Value With Key."
            },
            {
                "key": "m.co­nta­ins­Key­(key)",
                "val": "True If m Contains Key."
            }
        ]
    }
}
