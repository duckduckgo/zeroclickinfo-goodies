{
    "id": "openstack_cheat_sheet",
    "name": "OpenStack",
    "description": "Command Line Interface",
    "metadata": {
        "sourceName": "OpenStack - Cheat Sheet",
        "sourceUrl": "http://docs.openstack.org/user-guide/cli_cheat_sheet.html"
    },
    "section_order": [
	"Identity (keystone)",
        "Images (glance)",
        "Compute (nova)",
        "Networking (neutron)",
        "Block Storage (cinder)",
        "Volume Management inside Instance",
	"Object Storage (swift)"
    ],
    "sections": {
        "Identity (keystone)": [
            {
                "key": "keystone user-list",
                "val": "List all users"
            },
            {
                "key": "keystone catalog",
                "val": "List Identity service catalog"
            }
        ],
        "Images (glance)": [
            {
                "key": "glance image-list",
                "val": "List images you can access"
            },
	        {
                "key": "glance image-delete IMAGE",
                "val": "Delete specified image"
            },
	        {
                "key": "glance image-show IMAGE",
                "val": "Describe a specific image"
            }, 
            {
                "key": "glance image-update IMAGE",
                "val": "Update image"
            },
            {
                "key": "glance image-create --name \"cirros-threepart-kernel\" \\\\ --disk-format aki --container-format aki --is-public False \\\\  --file ~/images/cirros-0.3.1~pre4-x86_64-vmlinuz",
                "val": "Upload kernel image"
            },
	        {
                "key": "glance image-create --name \"cirros-threepart-ramdisk\" \\\\ --disk-format ari --container-format ari --is-public False \\\\ --file ~/images/cirros-0.3.1~pre4-x86_64-initrd",
                "val": "Upload RAM image"
            },
       	    { 
                "key": "glance image-create --name \"cirros-threepart\" --disk-format ami \\\\ --container-format ami --is-public False \\\\ --property kernel_id=$KID-property ramdisk_id=$RID \\\\ --file ~/images/cirros-0.3.1~pre4-x86_64-blank.img",
                "val": "Upload three-part image"
            },
	        {
                "key": "glance image-create --name \"cirros-qcow2\" --disk-format qcow2 \\\\ --container-format bare --is-public False \\\\ --file ~/images/cirros-0.3.1~pre4-x86_64-disk.img",
                "val": "Register raw image"
            }
        ],
         "Compute (nova)": [
            {
                "key": "nova list",
                "val": "List instances, check status of instance"
            },
            {
                "key": "nova image-list",
                "val": "List images"
            },
            {
                "key": "nova flavor-list",
                "val": "List flavors"
            },
            {
                "key": "nova boot --image IMAGE --flavor FLAVOR INSTANCE_NAME",
                "val": "Boot an instance using flavor (if names are unique)"
            },
            {
                "key": "nova boot --image cirros-0.3.1-x86_64-uec --flavor m1.tiny \\\\ MyFirstInstance",
                "val": "Boot an instance using image names (if names are unique)"
            },
            {
                "key": "ip netns exec qdhcp-6021a3b4-8587-4f9c-8064-0103885dfba2 \\\\ ssh cirros@10.0.0.2",
                "val": "Login to instance (ip netns exec NETNS_NAME ssh USER@SERVER)"
            },
            {
                "key": "nova show MyFirstInstance",
                "val": "Show details of instance"
            },
            {
                "key": "nova console-log MyFirstInstance",
                "val": "View console log of instance"
            },
            {
                "key": "nova meta volumeTwoImage set newmeta='my meta data'",
                "val": "Set metadata on an instance"
            },
            {
                "key": "nova image-create volumeTwoImage snapshotOfVolumeImage",
                "val": "Create an instance snapshot"
            },
            {
                "key": "nova pause NAME",
                "val": "Pause"
            },
            {
                "key": "nova unpause NAME",
                "val": "Unpause"
            },
            {
                "key": "nova suspend NAME",
                "val": "Suspend"
            },
            {
                "key": "nova resume NAME",
                "val": "Unsuspend"
            },
            {
                "key": "nova stop NAME",
                "val": "Stop"
            },
            {
                "key": "nova start NAME",
                "val": "Start"
            },
            {
                "key": "nova rescue NAME",
                "val": "Rescue"
            },
            {
                "key": "nova resize NAME FLAVOR",
                "val": "Resize"
            },
            {
                "key": "nova rebuild NAME IMAGE",
                "val": "Rebuild"
            },
            {
                "key": "nova reboot NAME",
                "val": "Reboot"
            },
            {
                "key": "nova boot --user-data FILE INSTANCE",
                "val": "Inject user data and files into an instance"
            },
            {
                "key": "nova keypair-add test > test.pem",
                "val": "Create keypair"
            },
            {
                "key": "nova boot --image cirros-0.3.0-x86_64 --flavor m1.small \\\\ --key_name test MyFirstServer",
                "val": "Start an instance (boot)"
            },
            {
                "key": "ip netns exec qdhcp-98f09f1e-64c4-4301-a897-5067ee6d544f \\\\ ssh -i test.pem cirros@10.0.0.4",
                "val": "Use ssh to connect to the instance"
            },
            {
                "key": "nova secgroup-add-group-rule default default icmp -1 -1",
                "val": "Add rules to default security group allowing ping and SSH between instances in the default security group"
            }
        ],
        "Networking (neutron)": [
            {
                "key": "neutron net-create NAME",
                "val": "Create network"
            },
            {
                "key": "neutron subnet-create NETWORK_NAME CIDR (neutron subnet-create my-network 10.0.0.0/29)",
                "val": "Create a subnet"
            }
        ],
        "Block Storage (cinder)": [
            {
                "key": "cinder create SIZE_IN_GB --display-name NAME (cinder create 1 --display-name MyFirstVolume)",
                "val": "Create a new volume"
            },
            {
                "key": "nova boot --image cirros-qcow2 --flavor m1.tiny MyVolumeInstance",
                "val": "Boot an instance and attach to volume"
            },
            {
                "key": "cinder list",
                "val": "List volumes, notice status of volume"
            },
            {
                "key": "nova volume-attach INSTANCE_ID VOLUME_ID auto (nova volume-attach MyVolumeInstance /dev/vdb auto)",
                "val": "Attach volume to instance after instance is active, and volume is available"
            }
        ],
        "Volume Management inside Instance": [
            {
                "key": "fdisk -l",
                "val": "List storage devices"
            },
            {
                "key": "mkfs.ext3 /dev/vdb",
                "val": "Make filesystem on volume"
            },
            {
                "key": "mkdir /myspace",
                "val": "Create a mountpoint"
            },
            {
                "key":"mount /dev/vdb /myspace",
                "val":"Mount the volume at the mountpoint"
            },
            {
                "key":"touch /myspace/helloworld.txt",
                "val":"Create a file on the volume"
            },
            {
                "key":"umount /myspace",
                "val":"Unmount the volume"
            }
        ],
        "Object Storage (swift)": [
            {
                "key": "swift stat (ACCOUNT/CONTAINER/OBJECT)",
                "val": "Display information for the account, container, or object"
            },
            {
                "key": "swift list",
                "val": "List containers"
            }
        ]
     }
}
