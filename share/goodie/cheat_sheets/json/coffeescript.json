{
    "id": "coffeescript_cheat_sheet",
    "name": "CoffeeScript Cheat Sheet",
    "description": "CoffeeScript is a programming language that transcompiles to JavaScript",
    "metadata": {
        "sourceName": "CoffeeScript",
        "sourceUrl": "http://coffeescript.org"
    },
    "aliases": [
        "coffee script"
    ],
    "template_type": "terminal",
    "section_order": [
        "Usage",
        "Variables",
        "Functions",
        "Arrays",
        "Operators and aliases"
    ],
    "sections": {
        "Usage": [{
            "val": "Run CoffeeScript file",
            "key": "coffee src\/file.coffee"
        }, {
            "val": "Compile files from src to output",
            "key": "coffee -c -o output\/ src\/"
        }, {
            "val": "Evaluate CoffeeScript code",
            "key": "coffee -e \"console.log 'Hello World'\""
        }, {
            "val": "Concatenate the source CoffeeScript before compiling",
            "key": "coffee --join output\/all.js --compile src\/*.coffee"
        }, {
            "val": "Start Read-eval-print loop",
            "key": "coffee"
        }, {
            "val": "Watch directory src for changes",
            "key": "coffee --output output\/ -cw src\/"
        }],
        "Variables": [{
            "val": "Initialize a variable",
            "key": "language = 'CoffeeScript'"
        }],
        "Functions": [{
            "val": "Define function",
            "key": "hello = -> console.log \"Hello\""
        }, {
            "val": "Call function",
            "key": "hello()"
        }, {
            "val": "Define function with args",
            "key": "sum = (a, b) -> a + b"
        }, {
            "val": "Call function with args",
            "key": "sum 1, 2"
        }, {
            "val": "Define function",
            "key": "sum_multiply = (a, b) -> \\[a + b, a * b\\]"
        }, {
            "val": "Call function",
            "key": "\\[sum, multiply \\] = sum_multiply 1, 2"
        }, {
            "val": "Define function with default param",
            "key": "myFunc = (param = 'default') -> console.log param"
        }, {
            "val": "Define function",
            "key": "otherFunc = (first, other...) -> console.log other"
        }, {
            "val": "call function with array as arguments",
            "key": "otherFunc myArray..."
        }],
        "Arrays": [{
            "val": "Array with numbers from 1 to 4",
            "key": "array = \\[1, 2, 3, 4\\]"
        }, {
            "val": "Array with numbers from 1 to 4",
            "key": "array = \\[1..4\\]"
        }, {
            "val": "Array with numbers from 1 to 4",
            "key": "array = \\[1...5\\]"
        }, {
            "val": "Create new array from three items from array",
            "key": "array1 = array\\[1..3\\]"
        }, {
            "val": "Change three items of array",
            "key": "array\\[1..3\\] = \\[3, 2, 1\\]"
        }, {
            "val": "Reverse elements in array",
            "key": "ground_coffee.reverse()"
        }, {
            "val": "Max element of array",
            "key": "Math.max \\[12, 32, 5\\]..."
        }, {
            "val": "Concatenating arrays",
            "key": "\\[1, 2\\].concat \\[3, 4, 5\\]"
        }],
        "Operators and aliases": [{
            "val": "this",
            "key": "this, @"
        }, {
            "val": "===",
            "key": "is"
        }, {
            "val": "!==",
            "key": "isnt"
        }, {
            "val": "!",
            "key": "not"
        }, {
            "val": "&&",
            "key": "and"
        }, {
            "val": "||",
            "key": "or"
        }, {
            "val": "true",
            "key": "true, yes, on"
        }, {
            "val": "false",
            "key": "false, no, off"
        }, {
            "val": "in",
            "key": "of"
        }, {
            "val": "find element in array (No JS equivalent)",
            "key": "in"
        }, {
            "val": "Math.pow(a, b)",
            "key": "a ** b"
        }, {
            "val": "Math.floor(a / b)",
            "key": "a // b"
        }, {
            "val": "(a % b + b) % b",
            "key": "a %% b"
        }]
    }
}

