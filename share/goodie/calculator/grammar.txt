:default ::= action => [value] bless => primary
lexeme default = action => [ start, length, value ]
    bless => ::name latm => 1

:start ::= Calculator

Calculator ::= Expression

Expression ::=
       ExprOp bless => primary
    || Term   bless => primary

Term ::=
       TermOp   bless => primary
    || Factor   bless => primary

TermOp ::= GenFactorTermOp | GenTermOp | StaticTermOp

StaticTermOp ::= Factor ('!') bless => factorial_operator

ExprOp ::= GenExprOp

Factor ::=
       Function                 bless => primary
    || ('(') Expression (')')   bless => paren assoc => group
    || NumTerm                  bless => primary
    || NumTerm ('e':i) NumTerm  bless => exp
    || GenPostFixFactorModifier

NumTerm ::=
       FactoredConstant bless => primary
    || Constant         bless => primary
    |  Number           bless => primary

FactoredConstant ::=
      Number WordConstant   bless => factored_word_constant
    | Number SymbolConstant bless => factored_symbol_constant

Constant ::=
      WordConstant
    | SymbolConstant

Function ::=
      GenUnaryFunction
    | UnaryFunction
    | GenBinaryFunction

UnaryFunction ::=
      ('log_' ) NumTerm Argument bless => logarithm
    | ('log'  ) NumTerm Argument bless => logarithm

# Argument for a unary function.
Argument ::= ('(') Expression (')') bless => primary

Number ::=
      [$] BaseNumber bless => prefix_currency
    |     BaseNumber bless => primary

BaseNumber ::=
      Integer
    | Decimal

Integer ::= integer bless => integer
Decimal ::= decimal bless => decimal
integer ~    '-' digits     | digits
decimal ~    '-' digits '.'   digits | digits '.' digits
           | '.' digits     | digits '.'
           | '-' digits '.'

digits     ~ [\d]+

:discard   ~ whitespace
whitespace ~ [\s]+
